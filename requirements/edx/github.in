# This file holds all GitHub-hosted edx-platform Python dependencies.
# Such dependencies should be added here, not to base.in.
# That being said....
#
# ---->>> DON'T JUST ADD NEW DEPENDENCIES!!! <<<----
#
# We are working to move all dependencies here to proper PyPI-hosted
# projects that can be specified in base.in (or development.in, etc).
# Every new GitHub-hosted dependency slows down the edx-platform build and
# subverts our continuous dependency upgrade process. This file should
# only be added to in exceptional circumstances. 
# 
# "I don't have time to publish my package to PyPI" is **not** an
# acceptable excuse. You can add a GitHub Action workflow to automatically
# upload your package to PyPI with the push of a button:
#
# * Go to https://github.com/openedx/<YOUR_REPO>/actions/new
# * Find "Publish Python Package"
# * Merge the generated PR and push package.
# * You're done! Add your dependency to base.in, and the requirements
#   bot will automatically keep it fresh in edx-platform.
#
# If you must open a pull request that adds a new git dependency, you should:
#   * verify that the dependency has a license compatible with AGPLv3
#   * confirm that it has no system requirements beyond what we already install
#   * run "make upgrade" to update the detailed requirements files
#
# A correct GitHub reference looks like this:
#
#   git+https://github.com/OWNER/REPO-NAME.git@TAG-OR-SHA#egg=DIST-NAME==VERSION
#
# For example:
#
#   git+https://github.com/edx/edx-lint.git@v0.3.2#egg=edx_lint==0.3.2
#
# where:
#
#   OWNER = edx
#   REPO-NAME = edx-lint
#   TAG-OR-SHA = v0.3.2
#   DIST-NAME = edx_lint
#   VERSION = 0.3.2
#
#
# Rules to follow (even though many URLs here don't follow them!):
#
#   * Don't leave out any of these pieces.
#
#   * TAG-OR-SHA is the specific commit to install.  It must be a git tag,
#     or a git SHA commit hash.  Don't use branch names here.  If OWNER is
#     not an edX organization, then it must be a SHA.  If you use a SHA,
#     please make sure there is a tag associated with it, so the commit can't
#     be lost during rebase.
#
#   * DIST-NAME is the distribution name, the same name you'd use in a
#     "pip install" command.  It might be different than REPO-NAME. It must
#     be the same as the `name="DIST-NAME"` value in the repo's setup.py.
#
#   * VERSION might not be the same as TAG-OR-SHA, but if the tag names the
#     version, please make it match the VERSION, but with a "v" prefix.
#     VERSION must be the same as the `version="VERSION"` value in the repo's
#     setup.py.  An alternative is to use 0.0 as VERSION: this forces pip to
#     re-install the package each time, and can be useful when working with two
#     repos before picking a version number. Don't use 0.0 on master, only for
#     tight-loop work in progress.

git+https://github.com/open-craft/xblock-poll@v1.12.0#egg=xblock-poll==1.12.0
git+https://github.com/openedx/blockstore.git@1.2.1#egg=blockstore==1.2.1
git+https://github.com/openedx/codejail.git@3.1.3#egg=codejail==3.1.3
git+https://github.com/openedx/django-require.git@f4f01e4e959adc6210873ae99e7f2c3741afbf35#egg=django-require==1.0.12
git+https://github.com/openedx/django-wiki.git@1.1.1#egg=django-wiki
git+https://github.com/openedx/olxcleaner.git@2f0d6c7f126cbd69c9724b7b57a0b2565330a297#egg=olxcleaner
git+https://github.com/openedx/MongoDBProxy.git@d92bafe9888d2940f647a7b2b2383b29c752f35a#egg=MongoDBProxy==0.1.0+edx.2
git+https://github.com/openedx/RateXBlock.git@2.0.1#egg=rate-xblock
git+https://github.com/openedx/xblock-drag-and-drop-v2@v2.3.5#egg=xblock-drag-and-drop-v2==2.3.5
git+https://github.com/openedx/xblock-google-drive.git@2d176468e33c0713c911b563f8f65f7cf232f5b6#egg=xblock-google-drive
