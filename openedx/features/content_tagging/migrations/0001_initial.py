# Generated by Django 3.2.19 on 2023-06-19 22:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("organizations", "0003_historicalorganizationcourse"),
        ("oel_tagging", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ContentTaxonomy",
            fields=[
                (
                    "taxonomy_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="oel_tagging.taxonomy",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "ContentTaxonomies",
            },
            bases=("oel_tagging.taxonomy",),
        ),
        migrations.CreateModel(
            name="ContentTaxonomyOrg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.organization",
                    ),
                ),
                (
                    "taxonomy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content_tagging.contenttaxonomy",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="contenttaxonomy",
            name="org_owners",
            field=models.ManyToManyField(
                through="content_tagging.ContentTaxonomyOrg",
                to="organizations.Organization",
            ),
        ),
    ]
