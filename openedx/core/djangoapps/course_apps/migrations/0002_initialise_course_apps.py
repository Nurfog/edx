# Generated by Django 2.2.24 on 2021-08-11 07:10

from django.db import migrations
from opaque_keys.edx.locator import LibraryLocator

from openedx.core.djangoapps.course_apps.plugins import CourseAppsPluginManager


def initialise_course_apps(apps, schema_editor):
    CourseAppStatus = apps.get_model("course_apps", "CourseAppStatus")
    CourseOverview = apps.get_model("course_overviews", "CourseOverview")
    course_app_plugins = CourseAppsPluginManager.get_available_plugins().values()
    for course_key in CourseOverview.objects.values_list('id', flat=True):
        if isinstance(course_key, LibraryLocator):
            continue
        for plugin in course_app_plugins:
            # For current plugins this is just reading a django setting or returning a bool value
            if plugin.is_available(course_key):
                # For current plugins this will load values from CourseOverviews or other models
                # We can potentially optimise this and directly load the data from CourseOverviews,
                # however this migration might run with other plugins installed or in the future
                # when the logic has changed, so this is the most reliable way.
                is_enabled = plugin.is_enabled(course_key)
                CourseAppStatus.objects.update_or_create(
                    course_key=course_key,
                    app_id=plugin.app_id,
                    defaults={'enabled': is_enabled}
                )


class Migration(migrations.Migration):
    dependencies = [
        ('course_apps', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            initialise_course_apps,
            migrations.RunPython.noop,
        )
    ]
