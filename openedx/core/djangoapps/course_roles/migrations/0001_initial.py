# Generated by Django 3.2.23 on 2023-12-01 12:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('course_overviews', '0029_alter_historicalcourseoverview_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organizations', '0004_auto_20230727_2054'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='course_overviews.courseoverview')),
                ('org', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='organizations.organization')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course_roles.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoleService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course_roles.role')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course_roles.service')),
            ],
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course_roles.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course_roles.role')),
            ],
        ),
        migrations.AddField(
            model_name='role',
            name='permissions',
            field=models.ManyToManyField(through='course_roles.RolePermission', to='course_roles.Permission'),
        ),
        migrations.AddField(
            model_name='role',
            name='services',
            field=models.ManyToManyField(through='course_roles.RoleService', to='course_roles.Service'),
        ),
        migrations.AddField(
            model_name='role',
            name='users',
            field=models.ManyToManyField(through='course_roles.UserRole', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='userrole',
            constraint=models.UniqueConstraint(fields=('user', 'role', 'course'), name='course_roles__urserrole_uniq_idx'),
        ),
        migrations.AddConstraint(
            model_name='roleservice',
            constraint=models.UniqueConstraint(fields=('role', 'service'), name='course_roles__roleservice_uniq_idx'),
        ),
        migrations.AddConstraint(
            model_name='rolepermission',
            constraint=models.UniqueConstraint(fields=('role', 'permission'), name='course_roles__rolepermission_uniq_idx'),
        ),
    ]
