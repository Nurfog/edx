name: Quality

on:
  pull_request:
  push:
    branches:
      - master
      - open-release/lilac.master

jobs:

  pylint:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - module-name: lms-1
            path: "lms/djangoapps/badges/ lms/djangoapps/branding/ lms/djangoapps/bulk_email/ lms/djangoapps/bulk_enroll/ lms/djangoapps/bulk_user_retirement/ lms/djangoapps/ccx/ lms/djangoapps/certificates/ lms/djangoapps/commerce/ lms/djangoapps/course_api/ lms/djangoapps/course_blocks/ lms/djangoapps/course_home_api/ lms/djangoapps/course_wiki/ lms/djangoapps/coursewarehistoryextended/ lms/djangoapps/debug/ lms/djangoapps/courseware/ lms/djangoapps/course_goals/ lms/djangoapps/rss_proxy/ lms/djangoapps/save_for_later/"
          - module-name: lms-2
            path: "lms/djangoapps/gating/ lms/djangoapps/grades/ lms/djangoapps/instructor/ lms/djangoapps/instructor_analytics/ lms/djangoapps/discussion/ lms/djangoapps/edxnotes/ lms/djangoapps/email_marketing/ lms/djangoapps/experiments/ lms/djangoapps/instructor_task/ lms/djangoapps/learner_dashboard/ lms/djangoapps/lms_initialization/ lms/djangoapps/lms_xblock/ lms/djangoapps/lti_provider/ lms/djangoapps/mailing/ lms/djangoapps/mobile_api/ lms/djangoapps/monitoring/ lms/djangoapps/ora_staff_grader/ lms/djangoapps/program_enrollments/ lms/djangoapps/rss_proxy lms/djangoapps/static_template_view/ lms/djangoapps/staticbook/ lms/djangoapps/support/ lms/djangoapps/survey/ lms/djangoapps/teams/ lms/djangoapps/tests/ lms/djangoapps/user_tours/ lms/djangoapps/verify_student/ lms/envs/ lms/lib/ lms/tests.py"
          - module-name: openedx-1
            path: "openedx/core/types/ openedx/core/djangoapps/ace_common/ openedx/core/djangoapps/agreements/ openedx/core/djangoapps/api_admin/ openedx/core/djangoapps/auth_exchange/ openedx/core/djangoapps/bookmarks/ openedx/core/djangoapps/cache_toolbox/ openedx/core/djangoapps/catalog/ openedx/core/djangoapps/ccxcon/ openedx/core/djangoapps/commerce/ openedx/core/djangoapps/common_initialization/ openedx/core/djangoapps/common_views/ openedx/core/djangoapps/config_model_utils/ openedx/core/djangoapps/content/ openedx/core/djangoapps/content_libraries/ openedx/core/djangoapps/contentserver/ openedx/core/djangoapps/cookie_metadata/ openedx/core/djangoapps/cors_csrf/ openedx/core/djangoapps/course_apps/ openedx/core/djangoapps/course_date_signals/ openedx/core/djangoapps/course_groups/ openedx/core/djangoapps/courseware_api/ openedx/core/djangoapps/crawlers/ openedx/core/djangoapps/credentials/ openedx/core/djangoapps/credit/ openedx/core/djangoapps/dark_lang/ openedx/core/djangoapps/debug/ openedx/core/djangoapps/demographics/ openedx/core/djangoapps/discussions/ openedx/core/djangoapps/django_comment_common/ openedx/core/djangoapps/embargo/ openedx/core/djangoapps/enrollments/ openedx/core/djangoapps/external_user_ids/ openedx/core/djangoapps/zendesk_proxy/ openedx/core/djangolib/ openedx/core/lib/ openedx/core/tests/ openedx/core/djangoapps/course_live/"
          - module-name: openedx-2
            path: "openedx/core/djangoapps/geoinfo/ openedx/core/djangoapps/header_control/ openedx/core/djangoapps/heartbeat/ openedx/core/djangoapps/lang_pref/ openedx/core/djangoapps/models/ openedx/core/djangoapps/monkey_patch/ openedx/core/djangoapps/oauth_dispatch/ openedx/core/djangoapps/olx_rest_api/ openedx/core/djangoapps/password_policy/ openedx/core/djangoapps/plugin_api/ openedx/core/djangoapps/plugins/ openedx/core/djangoapps/profile_images/ openedx/core/djangoapps/programs/ openedx/core/djangoapps/safe_sessions/ openedx/core/djangoapps/schedules/ openedx/core/djangoapps/service_status/ openedx/core/djangoapps/session_inactivity_timeout/ openedx/core/djangoapps/signals/ openedx/core/djangoapps/site_configuration/ openedx/core/djangoapps/system_wide_roles/ openedx/core/djangoapps/theming/ openedx/core/djangoapps/user_api/ openedx/core/djangoapps/user_authn/ openedx/core/djangoapps/util/ openedx/core/djangoapps/verified_track_content/ openedx/core/djangoapps/video_config/ openedx/core/djangoapps/video_pipeline/ openedx/core/djangoapps/waffle_utils/ openedx/core/djangoapps/xblock/ openedx/core/djangoapps/xmodule_django/ openedx/core/tests/ openedx/features/ openedx/testing/ openedx/tests/ openedx/core/djangoapps/learner_pathway/"
          - module-name: common
            path: "common"
          - module-name: cms
            path: "cms"
          - module-name: xmodule
            path: "xmodule"

    name: pylint ${{ matrix.module-name }}
    steps:

    - uses: actions/checkout@v2

    - name: Install Required System Packages
      run: sudo apt-get update && sudo apt-get install libxmlsec1-dev

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Get pip cache dir
      id: pip-cache-dir
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/edx/development.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install Required Python Dependencies
      run: |
        pip install -r requirements/pip.txt
        pip install -r requirements/edx/development.txt --src ${{ runner.temp }}
        pip uninstall -y mysqlclient
        pip install --no-binary mysqlclient mysqlclient

    - name: Run Quality Tests
      run: |
        pylint  ${{ matrix.path }}

  check-types:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8']
        os: ['ubuntu-20.04']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system requirements
        run: sudo apt update && sudo apt install -y libxmlsec1-dev

      - name: Install pip
        run: python -m pip install -r requirements/pip.txt

      - name: Get pip cache dir
        id: pip-cache-dir
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/edx/development.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install python dependencies
        run: pip install -r requirements/edx/development.txt

      - name: Static code analysis
        run: make check-types

  check-misc-quality:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        python-version: [ 3.8 ]
        node-version: [ 16 ]
        
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Fetch base branch for comparison
      run: git fetch --depth=1 origin ${{ github.base_ref }}

    - name: Install Required System Packages
      run: sudo apt-get update && sudo apt-get install libxmlsec1-dev

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup npm
      run: npm i -g npm@8.5.x

    - name: Get pip cache dir
      id: pip-cache-dir
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/edx/testing.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install Required Python Dependencies
      env:
        PIP_SRC_DIR: ${{ runner.temp }}
      run: |
        pip install -r requirements/pip.txt
        pip install -r requirements/edx/testing.txt -r requirements/edx/django.txt --src $PIP_SRC_DIR

    - name: Run Quality Tests
      env:
        TEST_SUITE: quality
        SCRIPT_TO_RUN: ./scripts/generic-ci-tests.sh
        SHARD: 4
        PIP_SRC_DIR: ${{ runner.temp }}
        TARGET_BRANCH: ${{ github.base_ref }}
      run: |
        ./scripts/all-tests.sh

    - name: Save Job Artifacts
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Build-Artifacts
        path: |
          **/reports/**/*
          test_root/log/**/*.log
          *.log

  verify-dunder-init-files:

    runs-on: ubuntu-20.04

    steps:

    - name: Check out branch
      uses: actions/checkout@v2

    - name: Ensure git is installed
      run: |
        sudo apt-get update && sudo apt-get install git

    - name: Verify __init__.py files exist
      run: |
        scripts/verify-dunder-init.sh

  verify-unit-test-count:

    runs-on: ubuntu-20.04
    steps:
      - name: sync directory owner
        run: sudo chown runner:runner -R .*

      - uses: actions/checkout@v2
      - name: install requirements
        run: |
          sudo pip install -r requirements/pip.txt
          sudo pip install -r requirements/edx/testing.txt

      - name: verify unit tests count
        uses: ./.github/actions/verify-tests-count

  verify-package-lock-version:

    uses: edx/.github/.github/workflows/lockfileversion-check.yml@master
